<?php
namespace Adservice\TicketBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * IncidenceRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class IncidenceRepository extends EntityRepository
{
    public function findIncidencesFiltered($security, $request)
    {
        $em = $this->getEntityManager();

        //Inicializa variables
        $query = 'SELECT i FROM TicketBundle:Incidence i ';
        $joins = 'JOIN i.ticket t JOIN t.workshop w ';
        $where = 'WHERE i.id != 0 ';
        $params = array();

        //Filtros enviados
        $id_incidence = $request->get('id_incidence');
        $id_ticket = $request->get('id_ticket');
        $id_partner = $request->get('id_partner');
        $id_workshop = $request->get('id_workshop');
        $id_region = $request->get('id_region');

        //Comprueba que los filtros no esten vacios y setea las variables para la consulta
        if ($id_incidence != "")
        {
            $where .= 'AND i.id = :id_incidence ';
            $params[] = array('id_incidence', $id_incidence);
        }

        if ($id_ticket != "")
        {
            $where .= 'AND t.id = :id_ticket ';
            $params[] = array('id_ticket', $id_ticket);
        }

        if ($security->isGranted("ROLE_ASSESSOR")) {

            if ($id_partner != "0") {

                $joins .= 'JOIN w.partner p ';
                $where .= 'AND p.id = :id_partner ';
                $params[] = array('id_partner', $id_partner);
            }

            if ($id_workshop != "")
            {
                $where .= 'AND w.id = :id_workshop ';
                $params[] = array('id_workshop', $id_workshop);
            }

            if ($id_region != "0") {

                $joins .= 'JOIN w.region r ';
                $where .= 'AND r.id = :id_region ';
                $params[] = array('id_region', $id_region);
            }
        }else{
            $where .= 'AND w.id = '.$security->getToken()->getUser()->getWorkshop()->getId().' ';
            $params[] = array('id_ticket', $id_ticket);
        }

        //Crea la consulta
        $consulta = $em->createQuery($query.$joins.$where);

        //hace un recorrido de $params para extraer los parametros de la consulta
        foreach($params as $param){
            $consulta->setParameter($param[0], $param[1]);
        }

	   return $consulta->getResult();
    }
}